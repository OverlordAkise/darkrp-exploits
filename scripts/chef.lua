--Luctus' Chef
--Made with love by OverlordAkise

--This should only be an example on how this works. Do not use it in a malicious way!

local tkey = KEY_LALT --Which button should toggle everything
local pkey = KEY_9 --Button to remove everything asap (=panic)
local aimsmoothness = 0.2 --0.1 for "little help only", 1 for flick
local aimbone = "ValveBiped.Bip01_Head1" --which bone to aim on

local chef = {}
chef.specs = {}
chef.looks = {}
chef.log = {}
chef.lastShot = 0
chef.shotCount = 0
chef.recoilAcc = Angle(0,0,0)

local color_white = Color(255,255,255,255)
local color_black = Color(0,0,0,255)
local color_grey = Color(205,205,255,255)

function chef.GetTarget(ply)
    local bone = ply:LookupBone(aimbone)
    if bone ~= nil then
        local pos, ang = ply:GetBonePosition(bone)
        return pos
    end
    return ply:GetPos()+ply:OBBCenter()
end

function chef.ChatText(message)
    print(message)
    table.insert(chef.log,message)
    if #chef.log > 20 then
        table.remove(chef.log,1)
    end
end

function chef.GetRank(ply)
    if ply:IsSuperAdmin() then return "SUPERADMIN" end
    if ply:GetNWString("usergroup") then return ply:GetNWString("usergroup") end
    if ply:IsAdmin() then return "ADMIN" end
    return "user"
end

local lastCheckToggle = 0
local isShowing = false
hook.Add("HUDPaint", "FPP_HUDPaint", function()
    if input.IsKeyDown(pkey) then
        hook.Remove("HUDPaint","FPP_HUDPaint")
        hook.Remove("CreateMove", "Keypad")
        hook.Remove("entity_killed", "RemoveEntitiesOnCleanUp")
        timer.Remove("UTimeThink")
    end
    if lastCheckToggle < CurTime() then
        if input.IsKeyDown(tkey) then isShowing = not isShowing end
        lastCheckToggle = CurTime()+0.1
    end
    if not isShowing then return end
    local me = LocalPlayer()
    local scrw = ScrW()
    local scrh = ScrH()
    if not IsValid(me) then return end
    --Chat
    for k,text in ipairs(chef.log) do
        draw.SimpleText(text,"Default",3,scrh/2.5-k*10,color_grey)
    end
    --Spectator
    for k,ply in ipairs(chef.specs) do
        if ply:IsValid() then
            draw.SimpleText(ply:Nick(), "Default", scrw/1.3, scrh-5-k*10,color_grey)
        end
    end
    --Lookers
    for k,nick in ipairs(chef.looks) do
        draw.SimpleText(nick, "Default", scrw/1.7, scrh-5-k*10, color_grey)
    end
    --Speed
    draw.SimpleText(math.Round(me:GetVelocity():Length()), "Default", scrw/2, scrh-60, color_grey, TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER )
    --Rectangles
    surface.SetDrawColor(255,255,255,255)
    local skeleton = {
    { S = "ValveBiped.Bip01_Head1", E = "ValveBiped.Bip01_Neck1" },
    { S = "ValveBiped.Bip01_Neck1", E = "ValveBiped.Bip01_Spine4" },
    { S = "ValveBiped.Bip01_Spine4", E = "ValveBiped.Bip01_Spine2" },
    { S = "ValveBiped.Bip01_Neck1", E = "ValveBiped.Bip01_L_Clavicle" },
    { S = "ValveBiped.Bip01_Neck1", E = "ValveBiped.Bip01_R_Clavicle" },
    { S = "ValveBiped.Bip01_Spine2", E = "ValveBiped.Bip01_Spine1" },
    { S = "ValveBiped.Bip01_Spine1", E = "ValveBiped.Bip01_Spine" },
    { S = "ValveBiped.Bip01_Spine", E = "ValveBiped.Bip01_Pelvis" },
    { S = "ValveBiped.Bip01_L_Clavicle", E = "ValveBiped.Bip01_L_UpperArm" },
    { S = "ValveBiped.Bip01_L_UpperArm", E = "ValveBiped.Bip01_L_Forearm" },
    { S = "ValveBiped.Bip01_L_Forearm", E = "ValveBiped.Bip01_L_Hand" },
    { S = "ValveBiped.Bip01_R_Clavicle", E = "ValveBiped.Bip01_R_UpperArm" },
    { S = "ValveBiped.Bip01_R_UpperArm", E = "ValveBiped.Bip01_R_Forearm" },
    { S = "ValveBiped.Bip01_R_Forearm", E = "ValveBiped.Bip01_R_Hand" },
    { S = "ValveBiped.Bip01_Pelvis", E = "ValveBiped.Bip01_L_Thigh" },
    { S = "ValveBiped.Bip01_L_Thigh", E = "ValveBiped.Bip01_L_Calf" },
    { S = "ValveBiped.Bip01_L_Calf", E = "ValveBiped.Bip01_L_Foot" },
    { S = "ValveBiped.Bip01_L_Foot", E = "ValveBiped.Bip01_L_Toe0" },
    { S = "ValveBiped.Bip01_Pelvis", E = "ValveBiped.Bip01_R_Thigh" },
    { S = "ValveBiped.Bip01_R_Thigh", E = "ValveBiped.Bip01_R_Calf" },
    { S = "ValveBiped.Bip01_R_Calf", E = "ValveBiped.Bip01_R_Foot" },
    }
    
    local me = LocalPlayer()

    for _, ply in ipairs(player.GetAll()) do
        if ply == me then continue end
        if not ply:Alive() then continue end
        local posFeet = ply:GetPos():ToScreen()
        if not posFeet.visible then continue end

        local posHead = ply:GetBonePosition(ply:LookupBone("ValveBiped.Bip01_Head1")):ToScreen()
        local adminText = chef.GetRank(ply)

        for _, v in ipairs(skeleton) do
            local startPos, startBone = ply:GetBonePosition(ply:LookupBone(v.S))
            local endPos, endBone = ply:GetBonePosition(ply:LookupBone(v.E))
            
            if startBone and endBone then
                local spos, epos = startPos:ToScreen(), endPos:ToScreen()
                surface.DrawLine(spos.x, spos.y, epos.x, epos.y)
            end
        end

        draw.SimpleTextOutlined(ply:Name(), "Default", posHead.x, posHead.y - 20, color_grey, 1, 0, 1, color_black)
        draw.SimpleTextOutlined("[" .. adminText .. "]", "Default", posFeet.x, posFeet.y + 12, color_grey, 1, 0, 1, color_black)
    end

    --LOGO
    surface.SetDrawColor(255, 255, 255, 255) 
    surface.DrawLine(5, 5, 15, 5)
    surface.DrawLine(15, 5, 15, 26)
    surface.DrawLine(5, 5, 5, 25)
    surface.DrawLine(5, 25, 15, 25)
    surface.DrawLine(5, 20, 15, 20)
    surface.DrawLine(8, 5, 8, 15)
    surface.DrawLine(12, 5, 12, 15)
    --aim
    if not input.IsMouseDown(MOUSE_RIGHT) then return end
    local closest = nil
    local closestDist = 999999999
    local vx,vy = scrw/2,scrh/2
    for k,ply in ipairs(player.GetAll()) do
        if ply == me then continue end
        if not me:IsLineOfSightClear(ply) then continue end
        local d2 = ply:EyePos():ToScreen()
        if not d2.visible then continue end
        local dist = math.sqrt((vx-d2.x)^2+(vy-d2.y)^2)
        if dist < closestDist then
            closestDist = dist
            closest = chef.GetTarget(ply)
        end
    end
    if chef.lastShot+0.5 < CurTime() then
        chef.shotCount = 0
        chef.recoilAcc = Angle(0,0,0)
    end
    if closest and IsValid(me:GetActiveWeapon()) and me:GetActiveWeapon().canaim then
        me:SetEyeAngles(LerpAngle(aimsmoothness,me:LocalEyeAngles(),(closest - me:GetShootPos()):Angle()-chef.recoilAcc))
    end
end)

hook.Add("CreateMove", "Keypad", function(cmd)
    if bit.band(cmd:GetButtons(),IN_JUMP) ~= 0 and not LocalPlayer():IsOnGround() then
        cmd:SetButtons(bit.band(cmd:GetButtons(),bit.bnot(IN_JUMP)))
    end
end)

gameevent.Listen("entity_killed")
hook.Add("entity_killed", "RemoveEntitiesOnCleanUp", function(data)
    local attacker_index = data.entindex_attacker
    local victim_index = data.entindex_killed
    local ply = "nobody?"
    local atk = "the map"
    local wep = "unknown weapon"
    local inflictor = ents.GetByIndex(data.entindex_inflictor)
    for _, p in ipairs(player.GetHumans()) do
        if p:EntIndex() == victim_index then
            ply = p:Nick()
        end
        if p:EntIndex() == attacker_index then 
            atk = p:Nick()
            if p:GetActiveWeapon() and p:GetActiveWeapon():IsValid() then
                wep = p:GetActiveWeapon():GetPrintName()
            end
        end
    end
    if attacker_index == victim_index then chef.ChatText(ply.." necked himself") return end
    if inflictor:IsValid() and inflictor:GetClass() == "prop_physics" then 
        chef.ChatText(ply.." got crushed by a prop!")
    end
    chef.ChatText(atk.." killed "..ply.." with a "..wep)
end)


local MaxViewAng = math.cos(math.rad(45))
timer.Create("UTimeThink",1,0,function()
    --lookers
    chef.looks = {}
    local me = LocalPlayer()
    local myeyes = me:EyePos()
    for k,ply in ipairs(player.GetAll()) do
        if ply == me then continue end
        local Trace = {}
        Trace.start  = myeyes
        Trace.endpos = ply:EyePos()
        Trace.filter = {ply,me}
        TraceRes = util.TraceLine(Trace)
        if TraceRes.Hit then continue end --block vision
        if ply:EyeAngles():Forward():Dot(me:EyePos() - ply:EyePos()) > MaxViewAng then
            if not table.HasValue(chef.looks, ply:Nick()) then
                table.insert(chef.looks, ply:Nick())
            end
        end
    end
    --Spectator
    for k,ply in ipairs(player.GetHumans()) do
        if ply:GetObserverTarget() and ply:GetObserverTarget() == me and not table.HasValue(chef.specs, ply) then
            chef.ChatText(ply:Nick().." has begun spectating you!")
            table.insert(chef.specs, ply)
        end
    end
    --Spectator 2
    for k,ply in ipairs(chef.specs) do
        if not IsValid(ply) then table.remove(chef.specs, k) continue end
        if (not ply:GetObserverTarget()) or ply:GetObserverTarget() ~= me then
            chef.ChatText(ply:Nick().." has stopped spectating you!")
            table.remove(chef.specs, k)
        end
    end
    --Weapon no kick up
    local wep = me:GetActiveWeapon()
    if wep and IsValid(wep) then
        if not wep.cCooked then
            chef.CookWeapon(wep,me)
        end
    end
end)

function chef.CookWeapon(wep,ply)
    wep.cCooked = true
    local class = wep:GetClass()
    if string.StartWith(class,"cw_") then
        wep.canaim = true
        wep.Primary.Recoil = 0
        wep.oldRecoil = wep.Recoil
        wep.Recoil = 0
        wep.MakeRecoil = function()end
        wep.simulateRecoil = function()end
        wep.addFireSpread = function()end
        wep.oldPA = wep.PrimaryAttack
        function wep:PrimaryAttack()
            wep:oldPA()
            ply:ViewPunchReset(9999)
            chef.lastShot = CurTime()
            if chef.shotCount > 4 then return end
            chef.shotCount = chef.shotCount + 1
            chef.recoilAcc = chef.recoilAcc + Angle(-self.oldRecoil * 1.25 * self:GetRecoilModifier(), 0, 0)
        end
    elseif string.StartWith(class,"fas2_") then
        wep.canaim = true
        wep.oldViewKick = wep.ViewKick
        wep.ViewKick = 0
        wep.Recoil = 0
        wep.AimRecoil = function()end
        wep.HipRecoil = function()end
        wep.Recoil = function()end
        function wep:AimRecoil()
            ply:ViewPunchReset(9999)
            chef.lastShot = CurTime()
            if chef.shotCount > 2 then return end
            chef.shotCount = chef.shotCount + 1
            mod = ply:Crouching() and 0.75 or 1
            chef.recoilAcc = chef.recoilAcc + (Angle(-wep.oldViewKick, wep.oldViewKick * math.Rand(-0.2475, 0.2475), 0) * (1 + wep.AddSpread * (wep.SpreadToRecoil and wep.SpreadToRecoil or 1)) * mod * (wep.dt.Bipod and 0.3 or 1))
        end
    elseif string.StartWith(class,"m9k_") then
        wep.canaim = true
        wep.Primary.KickDown = 0
        wep.Primary.KickUp = 0
        wep.Primary.KickHorizontal = 0
        wep.oldShootBullet = wep.ShootBullet
        wep.ShootBullet = function(damage, recoil, num_bullets, aimcone)
            wep.oldShootBullet(damage,recoil,num_bullets,aimcone)
            ply:ViewPunchReset()
            ply:SetEyeAngles(ply:EyeAngles())
        end
    elseif string.StartWith(class,"tfa_") then
        wep.canaim = true
        local orgRecoil = wep.Recoil
        wep.Recoil = function (recoil, ifp)
            ply:ViewPunchReset()
            orgRecoil(recoil, ifp)
            return
        end
    end
end
print("// chef v1.2 is cooking //")
